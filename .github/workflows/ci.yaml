name: CI

on:
  push:
    branches:
      - '**'
    tags-ignore:
      - '**'

env:
  CARGO_TERM_COLOR: always

jobs:

  lint:
    name: Lint
    id: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin
            ~/.cargo/registry
            ~/.cargo/git target
          key: lint-cache-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
      - run: rustup update stable && rustup default stable
      - name: Run cargo install cargo-machete
        run: |
          if [ ! -f ~/.cargo/bin/cargo-machete ]; then
            cargo install cargo-machete
          fi
      - run: cargo machete
      - run: cargo fmt --all -- --check
      - run: cargo generate-lockfile --locked
      - run: cargo clippy --locked -- --deny warnings
      - run: cargo verify-project --locked
      - run: cargo doc --no-deps

  test:
    name: Test
    id: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin
            ~/.cargo/registry
            ~/.cargo/git target
          key: lint-cache-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
      - run: rustup update stable && rustup default stable
      - run: cargo build --verbose
      - run: cargo test --verbose

  coverage:
    name: Coverage
    id: coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: ~/.cargo/bin
          key: coverage-cache-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            coverage-cache-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
            coverage-cache-${{ runner.os }}-
      - run: rustup update stable && rustup default stable
      - name: Run cargo install cargo-tarpaulin
        run: |
          if [ ! -f ~/.cargo/bin/cargo-tarpaulin ]; then
            cargo install cargo-tarpaulin
          fi
      - run: cargo tarpaulin --fail-immediately --fail-under 50 --locked

  tag-and-release:
    # only run on main/master/default
    if: format('refs/heads/{0}', github.event.repository.default_branch) == github.ref
    needs: [
      lint, test, coverage
    ]
    permissions:
      contents: write
    runs-on: ubuntu-latest
    concurrency: tag-and-release  # prevent any possible race conditions
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # required to see tags and commits
          ref: ${{ github.sha }}  # lock to triggered commit ('github.ref' is dynamic)

      - uses: WIPACrepo/wipac-dev-next-version-action@v1.2
        id: next-version
        with:
          force-patch-if-no-commit-token: True
          ignore-paths: |
            resources/**
            target/**
            .github/**

      - if: steps.next-version.outputs.version != ''
        uses: actions/cache@v4
        with:
          path: ~/.cargo/bin
          key: coverage-cache-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            coverage-cache-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
            coverage-cache-${{ runner.os }}-

      - if: steps.next-version.outputs.version != ''
        id: rpm_build
        name: Get RPM
        run: |
          rustup update stable && rustup default stable
          cargo install cargo-generate-rpm
          rustup target add x86_64-unknown-linux-musl
          cargo build --release --target x86_64-unknown-linux-musl
          strip -s target/x86_64-unknown-linux-musl/release/condor-credmon
          cargo generate-rpm --target x86_64-unknown-linux-musl
          echo "RPM_NAME=target/generate-rpm/condor-credmon.rpm" >> "$GITHUB_OUTPUT"

      - if: steps.next-version.outputs.version != ''
        name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.next-version.outputs.version }}
          target_commitish: ${{ github.sha }}
          generate_release_notes: True
          files: ${{ steps.rpm_build.outputs.RPM_NAME }}
