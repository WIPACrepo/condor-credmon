name: CI

on:
  push:
    branches:
      - '**'
    tags-ignore:
      - '**'

env:
  CARGO_TERM_COLOR: always

jobs:

  lint:
    name: Lint
    # only run on branches
    if: format('refs/heads/{0}', github.event.repository.default_branch) != github.ref
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin
            ~/.cargo/registry
            ~/.cargo/git target
          key: lint-cache-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
      - run: rustup update stable && rustup default stable
      - name: Run cargo install cargo-machete
        run: |
          if [ ! -f ~/.cargo/bin/cargo-machete ]; then
            cargo install cargo-machete
          fi
      - run: cargo machete
      - run: cargo fmt --all -- --check
      - run: cargo generate-lockfile --locked
      - run: cargo clippy --locked -- --deny warnings
      - run: cargo verify-project --locked
      - run: cargo doc --no-deps

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin
            ~/.cargo/registry
            ~/.cargo/git target
          key: lint-cache-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
      - run: rustup update stable && rustup default stable
      - run: cargo build --verbose
      - run: cargo test --verbose

  coverage:
    name: Coverage
    # only run on branches
    if: format('refs/heads/{0}', github.event.repository.default_branch) != github.ref
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: ~/.cargo/bin
          key: coverage-cache-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            coverage-cache-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
            coverage-cache-${{ runner.os }}-
      - run: rustup update stable && rustup default stable
      - name: Run cargo install cargo-tarpaulin
        run: |
          if [ ! -f ~/.cargo/bin/cargo-tarpaulin ]; then
            cargo install cargo-tarpaulin
          fi
      - run: cargo tarpaulin --fail-immediately --fail-under 50 --locked

  build_rpm:
    # only run on main/master/default
    if: format('refs/heads/{0}', github.event.repository.default_branch) == github.ref
    needs: [
      test
    ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # required to see tags and commits
          ref: ${{ github.sha }}  # lock to triggered commit ('github.ref' is dynamic)

      - uses: actions/cache@v4
        with:
          path: ~/.cargo/bin
          key: coverage-cache-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            coverage-cache-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
            coverage-cache-${{ runner.os }}-

      - id: rpm_build
        name: Get RPM
        run: |
          export TARGET="x86_64-unknown-linux-musl"
          export CC_${TARGET//-/_}=gcc
          rustup update stable && rustup default stable
          cargo install cargo-generate-rpm
          rustup target add $TARGET
          cargo build --release --target $TARGET
          strip -s target/$TARGET/release/condor_credmon
          strip -s target/$TARGET/release/client
          cargo generate-rpm --target $TARGET
          echo "RPM_NAME=target/$TARGET/generate-rpm/condor_credmon*.rpm" >> "$GITHUB_OUTPUT"

      - uses: actions/upload-artifact@v4
        with:
          name: condor_credmon.rpm
          path: ${{ steps.rpm_build.outputs.RPM_NAME }}

  tag-and-release:
    # only run on main/default branch
    if: format('refs/heads/{0}', github.event.repository.default_branch) == github.ref
    needs: [ build_rpm ]
    uses: WIPACrepo/wipac-dev-workflows/.github/workflows/tag-and-release.yml@v1.5
    permissions: # for GITHUB_TOKEN
      contents: write
    concurrency: tag-and-release  # prevent any possible race conditions
    with:
      project-type: rust
      release-artifacts: |
        condor_credmon.rpm
